#!/bin/bash

# –°–∫—Ä–∏–ø—Ç –¥–ª—è –¥–µ–ø–ª–æ—é/–æ–Ω–æ–≤–ª–µ–Ω–Ω—è Strapi –Ω–∞ Hetzner
# –ó–∞–ø—É—Å–∫–∞—Ç–∏ –∑ –¥–∏—Ä–µ–∫—Ç–æ—Ä—ñ—ó –ø—Ä–æ–µ–∫—Ç—É

set -e

echo "üöÄ –ü–æ—á–∏–Ω–∞—î–º–æ –¥–µ–ø–ª–æ–π Strapi –Ω–∞ Hetzner..."

# –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —â–æ –∑–Ω–∞—Ö–æ–¥–∏–º–æ—Å—è –≤ –ø—Ä–∞–≤–∏–ª—å–Ω—ñ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä—ñ—ó
if [ ! -f "docker-compose.yml" ]; then
    echo "‚ùå –ü–æ–º–∏–ª–∫–∞: docker-compose.yml –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ"
    echo "–ó–∞–ø—É—Å—Ç–∏ —Å–∫—Ä–∏–ø—Ç –∑ –¥–∏—Ä–µ–∫—Ç–æ—Ä—ñ—ó –ø—Ä–æ–µ–∫—Ç—É"
    exit 1
fi

# –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –Ω–∞—è–≤–Ω—ñ—Å—Ç—å .env —Ñ–∞–π–ª—É
if [ ! -f ".env" ]; then
    echo "‚ùå –ü–æ–º–∏–ª–∫–∞: .env —Ñ–∞–π–ª –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ"
    echo "–°—Ç–≤–æ—Ä–∏ .env —Ñ–∞–π–ª –∑ –Ω–µ–æ–±—Ö—ñ–¥–Ω–∏–º–∏ –∑–º—ñ–Ω–Ω–∏–º–∏"
    exit 1
fi

# –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —â–æ DATABASE_PASSWORD –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–π
if ! grep -q "DATABASE_PASSWORD=" .env; then
    echo "‚ö†Ô∏è  –£–í–ê–ì–ê: –ü–µ—Ä–µ–∫–æ–Ω–∞–π—Å—è —â–æ DATABASE_PASSWORD –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–π –≤ .env!"
    read -p "–ü—Ä–æ–¥–æ–≤–∂–∏—Ç–∏? (y/n) " -n 1 -r
    echo
    if [[ ! $REPLY =~ ^[Yy]$ ]]; then
        exit 1
    fi
fi

# –ó—É–ø–∏–Ω—è—î–º–æ —Å—Ç–∞—Ä—ñ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∏
echo "üõë –ó—É–ø–∏–Ω—è—î–º–æ —Å—Ç–∞—Ä—ñ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∏..."
docker-compose down || true

# –û—Ç—Ä–∏–º—É—î–º–æ –æ—Å—Ç–∞–Ω–Ω—ñ –∑–º—ñ–Ω–∏ –∑ git (—è–∫—â–æ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î—Ç—å—Å—è)
if [ -d ".git" ]; then
    echo "üì• –û—Ç—Ä–∏–º—É—î–º–æ –æ—Å—Ç–∞–Ω–Ω—ñ –∑–º—ñ–Ω–∏ –∑ Git..."

    # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –ø–æ—Ç–æ—á–Ω—É –≥—ñ–ª–∫—É
    CURRENT_BRANCH=$(git rev-parse --abbrev-ref HEAD)
    echo "‚ÑπÔ∏è  –ü–æ—Ç–æ—á–Ω–∞ –≥—ñ–ª–∫–∞: $CURRENT_BRANCH"

    # –ü—É–ª–∏–º–æ –∑–º—ñ–Ω–∏ –∑ –ø–æ—Ç–æ—á–Ω–æ—ó –≥—ñ–ª–∫–∏
    git pull origin $CURRENT_BRANCH || echo "‚ö†Ô∏è  Git pull –ø—Ä–æ–ø—É—â–µ–Ω–æ"

    echo "‚úÖ –û–Ω–æ–≤–ª–µ–Ω–æ –∑ –≥—ñ–ª–∫–∏: $CURRENT_BRANCH"
fi

# –í–∏–¥–∞–ª—è—î–º–æ —Å—Ç–∞—Ä—ñ Docker –æ–±—Ä–∞–∑–∏ (–µ–∫–æ–Ω–æ–º—ñ—è –º—ñ—Å—Ü—è)
echo "üßπ –û—á–∏—â–∞—î–º–æ —Å—Ç–∞—Ä—ñ Docker –æ–±—Ä–∞–∑–∏..."
docker image prune -f || true

# –ó–±–∏—Ä–∞—î–º–æ –Ω–æ–≤–∏–π –æ–±—Ä–∞–∑
echo "üî® –ó–±–∏—Ä–∞—î–º–æ Docker –æ–±—Ä–∞–∑..."
docker-compose build --no-cache

# –ó–∞–ø—É—Å–∫–∞—î–º–æ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∏
echo "‚ñ∂Ô∏è  –ó–∞–ø—É—Å–∫–∞—î–º–æ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∏..."
docker-compose up -d

# –ß–µ–∫–∞—î–º–æ –ø–æ–∫–∏ Strapi –∑–∞–ø—É—Å—Ç–∏—Ç—å—Å—è
echo "‚è≥ –ß–µ–∫–∞—î–º–æ –ø–æ–∫–∏ Strapi –∑–∞–ø—É—Å—Ç–∏—Ç—å—Å—è (—Ü–µ –º–æ–∂–µ –∑–∞–π–Ω—è—Ç–∏ 1-2 —Ö–≤–∏–ª–∏–Ω–∏)..."
sleep 50

# –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —Å—Ç–∞—Ç—É—Å
echo "üîç –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —Å—Ç–∞—Ç—É—Å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ñ–≤..."
docker-compose ps

# –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –ª–æ–≥–∏
echo ""
echo "üìã –û—Å—Ç–∞–Ω–Ω—ñ –ª–æ–≥–∏:"
docker-compose logs --tail=30

# –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —á–∏ Strapi –≤—ñ–¥–ø–æ–≤—ñ–¥–∞—î
echo ""
echo "üîç –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –¥–æ—Å—Ç—É–ø–Ω—ñ—Å—Ç—å Strapi..."
sleep 5
if curl -f http://localhost:1350/_health > /dev/null 2>&1; then
    echo "‚úÖ Strapi –ø—Ä–∞—Ü—é—î!"
else
    echo "‚ö†Ô∏è  Strapi —â–µ –∑–∞–ø—É—Å–∫–∞—î—Ç—å—Å—è –∞–±–æ —î –ø—Ä–æ–±–ª–µ–º–∞. –ü–µ—Ä–µ–≤—ñ—Ä –ª–æ–≥–∏:"
    echo "   docker-compose logs -f strapi"
fi

echo ""
echo "‚úÖ –î–µ–ø–ª–æ–π –∑–∞–≤–µ—Ä—à–µ–Ω–æ!"
echo ""
echo "üîó –ö–æ—Ä–∏—Å–Ω—ñ –∫–æ–º–∞–Ω–¥–∏:"
echo "  –õ–æ–≥–∏ Strapi:     docker-compose logs -f strapi"
echo "  –õ–æ–≥–∏ PostgreSQL: docker-compose logs -f postgres"
echo "  –†–µ—Å—Ç–∞—Ä—Ç:         docker-compose restart"
echo "  –ó—É–ø–∏–Ω–∫–∞:         docker-compose down"
echo "  –°—Ç–∞—Ç—É—Å:          docker-compose ps"
echo ""
echo "üåê –ü–µ—Ä–µ–≤—ñ—Ä –¥–æ—Å—Ç—É–ø–Ω—ñ—Å—Ç—å:"
echo "  –õ–æ–∫–∞–ª—å–Ω–æ:  curl http://localhost:1350"
echo "  –ó –¥–æ–º–µ–Ω—É:  curl http://demo-strapi.barbitch.cz"
echo ""
